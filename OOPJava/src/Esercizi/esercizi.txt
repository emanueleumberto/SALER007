Esercizio #1
Creare una classe Rettangolo che permetta di rappresentare dei rettangoli.
Per ogni rettangolo deve essere possibile specificare altezza e larghezza
e devono essere realizzati i metodi per calcolare perimetro,area e stampa.
Il metodo stampa deve stampare il valore di larghezza, altezza, perimetro e area
Creare un main in cui istanziare 2 oggetti di tipo rettangolo con valori diversi.
Calcoare e stampare il perimetro e l'area di ogni rettangolo tramite il metodo stampa.

Esercizio #2
Scrivere un’applicazione che simula il funzionamento di un operatore di telefonia cellulare.
Si devono quindi rappresentare i dati relativi ad una carta SIM, ed in particolare:
- il numero di telefono
- il credito disponibile in euro
- la lista delle ultime 5 chiamate effettuate
Per ciascuna Chiamata deve essere rappresentata la durata in minuti e il numero chiamato
La classe SIM dovrà fornire le seguenti funzionalità:
- un costruttore che crea una SIM con numero di telefono passato come parametro, credito a 0 e lista delle
   chiamate vuota
- un metodo per la stampa dei dati della SIM
- un metodo per effettuare una chiamata (solo se si ha credito)
- un metodo per ricaricare il credito

Scrivere un main che crei una istanza di SIM, ne stampi i dati e simuli il funzionamento.


Esercizio #3
Scrivere la classe Dipendente che ha i seguenti attributi:
- matricola - identificativo univoco del dipendente
- nomeCompleto - Stringa
- stipendioBase - numero decimale
- stipendio - numero decimale con stipendio base mensile calcolato per il dipendente
- Dipartimento - Valori possibili [PRODUZIONE, AMMINISTRAZIONE, VENDITE]

Le proprietà  devono essere accessibili solo dalla classe Dipendente
e deve essere possibile leggerle tramite opportuni metodi getter ma non modificarle,
tranne la proprietà  Dipartimento  che può essere modificata da altre classi tramite setter.

Estendere la classe Dipendente aggiungendo 3 ulteriori classi:
-	DipendenteFullTime
-	DipendentePartTime
-	Dirigente

Ogni classe concreta deve implementare il metodo calculateSalary() in modo appropriato
per il tipo di dipendente specifico. Ad esempio, il salario di un dipendente a tempo pieno
potrebbe essere calcolato come uno stipendio mensile fisso, mentre il salario
di un dipendente part-time potrebbe essere calcolato in base alle ore lavorate

Instanziare n Dipendenti nel main, creare un array con essi ed iterare su ognuno di essi
stampando la matricola di ogni dipendente, il nome e il salario.
